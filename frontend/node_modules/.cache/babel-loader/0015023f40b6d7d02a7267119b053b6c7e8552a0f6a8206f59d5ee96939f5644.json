{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wjaco\\\\CS351\\\\fgp-group6\\\\frontend\\\\src\\\\PantryTracker.js\",\n  _s = $RefreshSig$();\n// PantryTracker.js\nimport React, { useEffect, useState } from \"react\";\nimport \"./PantryTracker.css\";\n\n/**\r\n * props.uniqueIngredients = array of unique strings\r\n * onClose = () => void\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PantryTracker({\n  uniqueIngredients,\n  onClose\n}) {\n  _s();\n  // load from localStorage or start empty\n  const [pantry, setPantry] = useState(() => {\n    try {\n      return JSON.parse(localStorage.getItem(\"pantry\") || \"{}\");\n    } catch {\n      return {};\n    }\n  });\n\n  // keep localStorage in sync\n  useEffect(() => {\n    localStorage.setItem(\"pantry\", JSON.stringify(pantry));\n  }, [pantry]);\n\n  // helper to change a single quantity\n  const updateQty = (ing, qty) => setPantry(prev => ({\n    ...prev,\n    [ing]: qty < 0 ? 0 : qty\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pantry-tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pantry-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Pantry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"close-btn\",\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pantry-body\",\n      children: [uniqueIngredients.map(ing => {\n        var _pantry$ing;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pantry-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pantry-name\",\n            children: ing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0\",\n            value: (_pantry$ing = pantry[ing]) !== null && _pantry$ing !== void 0 ? _pantry$ing : \"\",\n            className: \"pantry-input\",\n            onChange: e => updateQty(ing, Number(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, ing, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this);\n      }), uniqueIngredients.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"empty-note\",\n        children: \"No ingredients loaded yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(PantryTracker, \"4r5rK2e97UR4kxfZHsYfI85u6ns=\");\n_c = PantryTracker;\nvar _c;\n$RefreshReg$(_c, \"PantryTracker\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PantryTracker","uniqueIngredients","onClose","_s","pantry","setPantry","JSON","parse","localStorage","getItem","setItem","stringify","updateQty","ing","qty","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_pantry$ing","type","min","value","onChange","e","Number","target","length","_c","$RefreshReg$"],"sources":["C:/Users/wjaco/CS351/fgp-group6/frontend/src/PantryTracker.js"],"sourcesContent":["// PantryTracker.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./PantryTracker.css\";\r\n\r\n/**\r\n * props.uniqueIngredients = array of unique strings\r\n * onClose = () => void\r\n */\r\nexport default function PantryTracker({ uniqueIngredients, onClose }) {\r\n  // load from localStorage or start empty\r\n  const [pantry, setPantry] = useState(() => {\r\n    try {\r\n      return JSON.parse(localStorage.getItem(\"pantry\") || \"{}\");\r\n    } catch {\r\n      return {};\r\n    }\r\n  });\r\n\r\n  // keep localStorage in sync\r\n  useEffect(() => {\r\n    localStorage.setItem(\"pantry\", JSON.stringify(pantry));\r\n  }, [pantry]);\r\n\r\n  // helper to change a single quantity\r\n  const updateQty = (ing, qty) =>\r\n    setPantry(prev => ({ ...prev, [ing]: qty < 0 ? 0 : qty }));\r\n\r\n  return (\r\n    <div className=\"pantry-tracker\">\r\n      <div className=\"pantry-header\">\r\n        <h2>Your Pantry</h2>\r\n        <button onClick={onClose} className=\"close-btn\">âœ•</button>\r\n      </div>\r\n\r\n      <div className=\"pantry-body\">\r\n        {uniqueIngredients.map(ing => (\r\n          <div key={ing} className=\"pantry-row\">\r\n            <span className=\"pantry-name\">{ing}</span>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              value={pantry[ing] ?? \"\"}\r\n              className=\"pantry-input\"\r\n              onChange={e => updateQty(ing, Number(e.target.value))}\r\n            />\r\n          </div>\r\n        ))}\r\n        {uniqueIngredients.length === 0 && (\r\n          <p className=\"empty-note\">No ingredients loaded yet.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}