{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wjaco\\\\CS351\\\\fgp-group6\\\\frontend\\\\src\\\\TrendingRecipes.js\",\n  _s = $RefreshSig$();\n// TrendingRecipes.js\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./TrendingRecipes.css\";\n\n/**\r\n * Most-viewed recipes panel\r\n * - Refreshes every 10 s (polling)\r\n * - Also refreshes instantly whenever the parent bumps `refresh`\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TrendingRecipes({\n  limit = 10,\n  pollMs = 10000,\n  refresh = 0\n}) {\n  _s();\n  const [list, setList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  /** request helper */\n  const load = async (spinner = false) => {\n    if (spinner) setLoading(true);\n    setError(null);\n    try {\n      const {\n        data\n      } = await axios.get(\"/trending\", {\n        params: {\n          limit\n        }\n      });\n      if (data.success) setList(data.trending || []);else setError(\"Server refused request\");\n    } catch {\n      setError(\"Error reaching server.\");\n    } finally {\n      if (spinner) setLoading(false);\n    }\n  };\n\n  /* first load + polling */\n  useEffect(() => {\n    load(true);\n    const id = setInterval(() => load(false), pollMs);\n    return () => clearInterval(id);\n  }, [limit, pollMs]);\n\n  /* immediate refresh when parent notifies */\n  useEffect(() => {\n    if (!loading) load(false);\n  }, [refresh]); // eslint-disable-line\n\n  /* rank style helpers */\n  const rankColor = idx => idx === 0 ? \"#ffd700\" : idx === 1 ? \"#c0c0c0\" : idx === 2 ? \"#cd7f32\" : \"#8b4513\";\n  const rankFont = idx => idx < 3 ? \"#333\" : \"#fff\";\n\n  /* ---------------- UI ---------------- */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trending-recipes\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Most-Viewed Native American Recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-trending\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), \"Loading trending recipes\\u2026\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : list.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-trending\",\n      children: \"No views yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trending-list\",\n      children: list.map(({\n        name,\n        views\n      }, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trending-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trending-rank\",\n          style: {\n            backgroundColor: rankColor(idx),\n            color: rankFont(idx)\n          },\n          children: idx + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trending-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trending-name\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trending-views\",\n            children: [views, \" views\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(TrendingRecipes, \"PFbQR131PKzXqG4nqlWiLGzYfNA=\");\n_c = TrendingRecipes;\nvar _c;\n$RefreshReg$(_c, \"TrendingRecipes\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","TrendingRecipes","limit","pollMs","refresh","_s","list","setList","loading","setLoading","error","setError","load","spinner","data","get","params","success","trending","id","setInterval","clearInterval","rankColor","idx","rankFont","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","name","views","style","backgroundColor","color","_c","$RefreshReg$"],"sources":["C:/Users/wjaco/CS351/fgp-group6/frontend/src/TrendingRecipes.js"],"sourcesContent":["// TrendingRecipes.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./TrendingRecipes.css\";\r\n\r\n/**\r\n * Most-viewed recipes panel\r\n * - Refreshes every 10 s (polling)\r\n * - Also refreshes instantly whenever the parent bumps `refresh`\r\n */\r\nexport default function TrendingRecipes({ limit = 10, pollMs = 10000, refresh = 0 }) {\r\n  const [list,    setList]    = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error,   setError]   = useState(null);\r\n\r\n  /** request helper */\r\n  const load = async (spinner = false) => {\r\n    if (spinner) setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const { data } = await axios.get(\"/trending\", { params: { limit } });\r\n      if (data.success) setList(data.trending || []);\r\n      else               setError(\"Server refused request\");\r\n    } catch {\r\n      setError(\"Error reaching server.\");\r\n    } finally { if (spinner) setLoading(false); }\r\n  };\r\n\r\n  /* first load + polling */\r\n  useEffect(() => {\r\n    load(true);\r\n    const id = setInterval(() => load(false), pollMs);\r\n    return () => clearInterval(id);\r\n  }, [limit, pollMs]);\r\n\r\n  /* immediate refresh when parent notifies */\r\n  useEffect(() => { if (!loading) load(false); }, [refresh]);  // eslint-disable-line\r\n\r\n  /* rank style helpers */\r\n  const rankColor = idx =>\r\n    idx === 0 ? \"#ffd700\" : idx === 1 ? \"#c0c0c0\" : idx === 2 ? \"#cd7f32\" : \"#8b4513\";\r\n  const rankFont  = idx => (idx < 3 ? \"#333\" : \"#fff\");\r\n\r\n  /* ---------------- UI ---------------- */\r\n  return (\r\n    <div className=\"trending-recipes\">\r\n      <h2>Most-Viewed Native American Recipes</h2>\r\n\r\n      {loading ? (\r\n        <div className=\"loading-trending\">\r\n          <div className=\"spinner\" />\r\n          Loading trending recipesâ€¦\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"error-message\">{error}</div>\r\n      ) : list.length === 0 ? (\r\n        <div className=\"no-trending\">No views yet.</div>\r\n      ) : (\r\n        <div className=\"trending-list\">\r\n          {list.map(({ name, views }, idx) => (\r\n            <div key={idx} className=\"trending-item\">\r\n              <div\r\n                className=\"trending-rank\"\r\n                style={{ backgroundColor: rankColor(idx), color: rankFont(idx) }}\r\n              >\r\n                {idx + 1}\r\n              </div>\r\n              <div className=\"trending-info\">\r\n                <div className=\"trending-name\">{name}</div>\r\n                <div className=\"trending-views\">{views} views</div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}