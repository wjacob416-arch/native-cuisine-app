{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wjaco\\\\CS351\\\\fgp-group6\\\\frontend\\\\src\\\\AutoScraper.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AutoScraper({\n  onScrapingComplete\n}) {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [hasScraped, setHasScraped] = useState(false);\n  const triggerAutoScrape = async () => {\n    if (hasScraped) return;\n    setIsLoading(true);\n    setMessage(\"Automatically scraping Native American recipes...\");\n    setError(null);\n    try {\n      const res = await axios.get(\"/auto-scrape\");\n      if (res.data.success) {\n        setMessage(`Added ${res.data.new_recipes.length} recipes!`);\n        onScrapingComplete === null || onScrapingComplete === void 0 ? void 0 : onScrapingComplete();\n      } else {\n        setError(\"Failed to scrape recipes\");\n      }\n    } catch {\n      setError(\"Error connecting to server. Please try again.\");\n    } finally {\n      setIsLoading(false);\n      setHasScraped(true);\n    }\n  };\n  const handleManualScrape = () => {\n    setHasScraped(false);\n    triggerAutoScrape();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auto-scraper\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 70\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleManualScrape,\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 58\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this) : message ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleManualScrape,\n        children: \"Scrape Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(AutoScraper, \"O4SRYn+K0ZRdKd1CAiMhvXr0qfY=\");\n_c = AutoScraper;\nexport default AutoScraper;\nvar _c;\n$RefreshReg$(_c, \"AutoScraper\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AutoScraper","onScrapingComplete","_s","isLoading","setIsLoading","message","setMessage","error","setError","hasScraped","setHasScraped","triggerAutoScrape","res","get","data","success","new_recipes","length","handleManualScrape","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/wjaco/CS351/fgp-group6/frontend/src/AutoScraper.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction AutoScraper({ onScrapingComplete }) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [message, setMessage]     = useState(\"\");\r\n  const [error, setError]         = useState(null);\r\n  const [hasScraped, setHasScraped]= useState(false);\r\n\r\n  const triggerAutoScrape = async () => {\r\n    if (hasScraped) return;\r\n    setIsLoading(true);\r\n    setMessage(\"Automatically scraping Native American recipes...\");\r\n    setError(null);\r\n    try {\r\n      const res = await axios.get(\"/auto-scrape\");\r\n      if (res.data.success) {\r\n        setMessage(`Added ${res.data.new_recipes.length} recipes!`);\r\n        onScrapingComplete?.();\r\n      } else {\r\n        setError(\"Failed to scrape recipes\");\r\n      }\r\n    } catch {\r\n      setError(\"Error connecting to server. Please try again.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n      setHasScraped(true);\r\n    }\r\n  };\r\n\r\n  const handleManualScrape = () => {\r\n    setHasScraped(false);\r\n    triggerAutoScrape();\r\n  };\r\n\r\n  return (\r\n    <div className=\"auto-scraper\">\r\n      {isLoading\r\n        ? <div className=\"loading-message\"><div className=\"spinner\"/><p>{message}</p></div>\r\n        : error\r\n          ? <div className=\"error-message\"><p>{error}</p><button onClick={handleManualScrape}>Retry</button></div>\r\n          : message\r\n            ? <div className=\"success-message\"><p>{message}</p><button onClick={handleManualScrape}>Scrape Again</button></div>\r\n            : null\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AutoScraper;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAAC;EAAEC;AAAmB,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAOV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAWZ,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAEd,QAAQ,CAAC,KAAK,CAAC;EAElD,MAAMe,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAIF,UAAU,EAAE;IAChBL,YAAY,CAAC,IAAI,CAAC;IAClBE,UAAU,CAAC,mDAAmD,CAAC;IAC/DE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMI,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,cAAc,CAAC;MAC3C,IAAID,GAAG,CAACE,IAAI,CAACC,OAAO,EAAE;QACpBT,UAAU,CAAC,SAASM,GAAG,CAACE,IAAI,CAACE,WAAW,CAACC,MAAM,WAAW,CAAC;QAC3DhB,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAG,CAAC;MACxB,CAAC,MAAM;QACLO,QAAQ,CAAC,0BAA0B,CAAC;MACtC;IACF,CAAC,CAAC,MAAM;MACNA,QAAQ,CAAC,+CAA+C,CAAC;IAC3D,CAAC,SAAS;MACRJ,YAAY,CAAC,KAAK,CAAC;MACnBM,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC;EAED,MAAMQ,kBAAkB,GAAGA,CAAA,KAAM;IAC/BR,aAAa,CAAC,KAAK,CAAC;IACpBC,iBAAiB,CAAC,CAAC;EACrB,CAAC;EAED,oBACEZ,OAAA;IAAKoB,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BjB,SAAS,gBACNJ,OAAA;MAAKoB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAACrB,OAAA;QAAKoB,SAAS,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAAAzB,OAAA;QAAAqB,QAAA,EAAIf;MAAO;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GACjFjB,KAAK,gBACHR,OAAA;MAAKoB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAACrB,OAAA;QAAAqB,QAAA,EAAIb;MAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAAAzB,OAAA;QAAQ0B,OAAO,EAAEP,kBAAmB;QAAAE,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GACtGnB,OAAO,gBACLN,OAAA;MAAKoB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAACrB,OAAA;QAAAqB,QAAA,EAAIf;MAAO;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAAAzB,OAAA;QAAQ0B,OAAO,EAAEP,kBAAmB;QAAAE,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GACjH;EAAI;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAET,CAAC;AAEV;AAACtB,EAAA,CA5CQF,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AA8CpB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}